# -*- coding: utf-8 -*-

import matplotlib.pyplot as plt
import numpy as np
from mpl_toolkits.mplot3d import Axes3D
from matplotlib import animation #动画

x = np.linspace(-3,3,50)
y1 = 2*x+1
y2 = x**2

#窗口1
plt.figure(num=1,figsize=(8,5)) #名称和尺寸
#画线
l1, = plt.plot(x,y1,label='up') #label名称 
l2, = plt.plot(x,y2,color='red',linewidth=1.0,linestyle='--',label='down')
#修改坐标轴尺度
plt.xlim(-1,2)
plt.ylim(-2,3)
#修改坐标轴名称
plt.xlabel('im x')
plt.ylabel('im y')
#替换下标
new_ticks = np.linspace(-1,2,5)
plt.xticks(new_ticks)
plt.yticks([-2,-1.5,-1,1,2],['$a$','b','c','d','e'])  #$修改字体
#修改坐标轴位置
ax = plt.gca() #边框
ax.spines['right'].set_color('none')#去掉边框
ax.spines['top'].set_color('none')
ax.xaxis.set_ticks_position('bottom')#指定x轴
ax.yaxis.set_ticks_position('left')
ax.spines['bottom'].set_position(('data',0))
ax.spines['left'].set_position(('data',0))
#加图例
plt.legend(handles=[l1,l2],labels=['aa','bb'],loc='best') 
#修改标注
for label in ax.get_xticklabels()+ax.get_yticklabels():
    label.set_fontsize(12)
    label.set_bbox(dict(facecolor='green',edgecolor='none',alpha=0.7))
#添加注解
x0 = 0.5
y0 =2*x0 + 1
plt.scatter(x0,y0,s=50,color='b') #画点，而plot是画线
plt.plot([x0,x0],[y0,0],'k--',lw=2.5)  #黑色-- lw宽度

#窗口2
plt.figure(num=2)
plt.plot(x,y2)
plt.show()

#窗口3 散点图
plt.figure(num=3)
n = 1024
X = np.random.normal(0,1,n)
Y = np.random.normal(0,1,n)
T = np.arctan2(Y,X)  #颜色
plt.scatter(X,Y,s=75,c=T,alpha=0.5)
plt.xlim(-1.5,1.5)
plt.ylim(-1.5,1.5)
plt.xticks(()) #隐藏坐标
plt.yticks(())
plt.show()

#窗口4 柱状图
plt.figure(num=4)
n = 12
X = np.arange(n)
Y1 = (1-X/float(n))*np.random.uniform(0.5,1.0,n)
Y2 = (1-X/float(n))*np.random.uniform(0.5,1.0,n)
plt.bar(X,+Y1,facecolor='green')
plt.bar(X,-Y2)
#加标值
for x,y in zip(X,Y1):
    plt.text(x,y+0.05,'%.2f'%y,ha='center',va='bottom')  #text位置，对齐方式
for x,y in zip(X,Y2):
    plt.text(x,-y-0.05,'-%.2f'%y,ha='center',va='top')
plt.xlim(-0.5,n)
plt.ylim(-1.5,1.5)
# =============================================================================
# plt.xticks(()) #隐藏坐标
# plt.yticks(())
# =============================================================================
plt.show()

#窗口5 等高线图
plt.figure(num=5)
def f(x,y):
    return(1-x/2+x**5+y**3)*np.exp(-x**2-y**2)
n = 256
x = np.linspace(-3,3,n)#指标
y = np.linspace(-3,3,n)
X,Y = np.meshgrid(x,y) #把xy绑定成网格
plt.contourf(X,Y,f(X,Y),8,alpha=0.75,cmap=plt.cm.hot)
C = plt.contour(X,Y,f(X,Y),8,color='black',linewidth=0.5)#等高线
plt.clabel(C,inline=True,fontsize=10)
plt.show()


#窗口6 数字图
plt.figure(num=6)
a = np.array([0.3,0.4,0.5,0.4,0.6,0.9,0.2,0.3,0.5]).reshape(3,3)
plt.imshow(a,interpolation='nearest',cmap='bone',origin='lowr')
plt.colorbar()
plt.show()

#窗口7 3D图
fig = plt.figure(num=7)
ax = Axes3D(fig)
x = np.arange(-4,4,0.25)
y = np.arange(-4,4,0.25)
X,Y = np.meshgrid(x,y) #把xy绑定成网格
R = np.sqrt(X**2+Y**2)
Z = np.sin(R)
ax.plot_surface(X,Y,Z,rstride=1,cstride=1,cmap=plt.get_cmap('rainbow')) #画在这上边
ax.contourf(X,Y,Z,zdir='z',offset=-2,cmap='rainbow')
ax.set_zlim(-2,2) #z的高度范围
plt.show()



#窗口8 次图
plt.figure(num=8)

plt.subplot(2,1,1)
x = np.linspace(-3,3,50)
y = 2*x+1
plt.plot(x,y)

plt.subplot(2,3,4)
x = np.linspace(-3,3,50)
y = 2*x+1
plt.plot(x,y)

plt.subplot(2,3,5)
x = np.linspace(-3,3,50)
y = 2*x+1
plt.plot(x,y)

plt.subplot(2,3,6)
plt.plot([0,1],[0,2])

plt.show()


#窗口9 动图
plt.figure(num=9)

fig,ax =plt.subplots()
x = np.arange(0,2*np.pi,0.01)
line, = ax.plot(x,np.sin(x))
def animate(i):
    line.set_ydata(np.sin(x+i/100))
    return line,
def init():
    line.set_ydata(np.sin(x))
    return line,
ani = animation.FuncAnimation(fig=fig,func=animate,frames=100,init_func=init,interval=20,blit=False)

plt.show()


#如果想打开新matplotlib窗口，在控制台输入：%matplotlib qt5   
#备选参数: ['auto', 'gtk', 'gtk3', 'inline', 'nbagg', 'notebook', 'osx', 'qt', 'qt4', 'qt5', 'tk', 'wx']
